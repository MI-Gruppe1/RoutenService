group 'RoutenService'
version '0.0.1'



buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.6.1'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.docker-remote-api'

/**
 * Define the name and version of the resulting jar file
 */
jar {
    manifest {
        attributes 'Main-Class': 'routing.RoutenService'
    }
    baseName = 'RoutenService'
    version = '0.0.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'Routing'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'

    compile 'com.google.code.gson:gson:2.7'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    compile "com.sparkjava:spark-core:2.5"

    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
    compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.0.2'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.6'
    compile group: 'org.json', name: 'json', version: '20140107'

    compile 'io.rest-assured:rest-assured:3.0.1'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

//import com.bmuschko.gradle.docker.tasks.image.Dockerfile
//import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

//task createDockerfile(type: Dockerfile) {
//    destFile = project.file('Dockerfile')
//    from 'openjdk:8 '
//    maintainer 'Rutkay Kuepelikilinc'
//}

//task buildImage(type: DockerBuildImage) {
//    dependsOn createDockerfile
//    inputDir = project.file('Dockerfile')
//    tag = 'RoutenService'
//}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Version': version,
                'Main-Class': 'routing.RoutenService'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}